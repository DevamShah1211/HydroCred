/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  HydroCredToken,
  HydroCredTokenInterface,
} from "../../../contracts/HydroCredToken.sol/HydroCredToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_roleManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "producer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "certifier",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CertifiedMintClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "CreditsRetired",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "CERTIFICATION_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "producer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "requestId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "certifier",
            type: "address",
          },
        ],
        internalType: "struct HydroCredToken.Certification",
        name: "c",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "claimMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "retire",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roleManager",
    outputs: [
      {
        internalType: "contract IRoleManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "usedCertifications",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101806040523480156200001257600080fd5b5060405162001bc238038062001bc2833981016040819052620000359162000204565b604080518082018252600980825268121e591c9bd0dc995960ba1b60208084018290528451808601865260018152603160f81b81830152855180870187529384528382019290925284518086019095526002855261241960f11b9085015291926003620000a38382620002dd565b506004620000b28282620002dd565b50620000c4915083905060056200017f565b61012052620000d58160066200017f565b61014052815160208084019190912060e052815190820120610100524660a0526200016360e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c0526001600160a01b0316610160526200041f565b60006020835110156200019f576200019783620001b8565b9050620001b2565b81620001ac8482620002dd565b5060ff90505b92915050565b600080829050601f81511115620001ef578260405163305a27a960e01b8152600401620001e69190620003a9565b60405180910390fd5b8051620001fc82620003fa565b179392505050565b6000602082840312156200021757600080fd5b81516001600160a01b03811681146200022f57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200026157607f821691505b6020821081036200028257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002d8576000816000526020600020601f850160051c81016020861015620002b35750805b601f850160051c820191505b81811015620002d457828155600101620002bf565b5050505b505050565b81516001600160401b03811115620002f957620002f962000236565b62000311816200030a84546200024c565b8462000288565b602080601f831160018114620003495760008415620003305750858301515b600019600386901b1c1916600185901b178555620002d4565b600085815260208120601f198616915b828110156200037a5788860151825594840194600190910190840162000359565b5085821015620003995787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020808352835180602085015260005b81811015620003d957858101830151858201604001528201620003bb565b506000604082860101526040601f19601f8301168501019250505092915050565b80516020808301519190811015620002825760001960209190910360031b1b16919050565b60805160a05160c05160e05161010051610120516101405161016051611721620004a1600039600081816101140152818161068b015281816106ba015281816107ef015261081e01526000610b6301526000610b310152600061118801526000611160015260006110bb015260006110e50152600061110f01526117216000f3fe608060405234801561001057600080fd5b506004361061010a5760003560e01c806367294848116100a257806395d89b411161007157806395d89b4114610261578063a9059cbb14610269578063aeaba82b1461027c578063b37e90ee1461028f578063dd62ed3e146102b657600080fd5b806367294848146101e757806370a082311461020a57806379cc67901461023357806384b0196e1461024657600080fd5b806323b872dd116100de57806323b872dd1461019d578063313ce567146101b057806342966c68146101bf5780635f09ffbd146101d457600080fd5b8062435da51461010f57806306fdde0314610153578063095ea7b31461016857806318160ddd1461018b575b600080fd5b6101367f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61015b6102ef565b60405161014a9190611316565b61017b610176366004611345565b610381565b604051901515815260200161014a565b6002545b60405190815260200161014a565b61017b6101ab36600461136f565b61039b565b6040516012815260200161014a565b6101d26101cd3660046113ab565b6103bf565b005b6101d26101e236600461140d565b6103cc565b61017b6101f53660046113ab565b60076020526000908152604090205460ff1681565b61018f610218366004611459565b6001600160a01b031660009081526020819052604090205490565b6101d2610241366004611345565b610420565b61024e610439565b60405161014a9796959493929190611474565b61015b61047f565b61017b610277366004611345565b61048e565b6101d261028a36600461150d565b61049c565b61018f7f0b8b7b064fb1e7b53c85e767bf347efcbffda49b91480ce275012ad13c06493081565b61018f6102c436600461154f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102fe90611582565b80601f016020809104026020016040519081016040528092919081815260200182805461032a90611582565b80156103775780601f1061034c57610100808354040283529160200191610377565b820191906000526020600020905b81548152906001019060200180831161035a57829003601f168201915b5050505050905090565b60003361038f818585610a04565b60019150505b92915050565b6000336103a9858285610a16565b6103b4858585610a95565b506001949350505050565b6103c93382610af4565b50565b6103d63384610af4565b336001600160a01b03167f554ae59b59830600d0638ca7a742c4d11a7030f32a6885c3f2bea19ca1d26ecb848484604051610413939291906115bc565b60405180910390a2505050565b61042b823383610a16565b6104358282610af4565b5050565b60006060806000806000606061044d610b2a565b610455610b5c565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6060600480546102fe90611582565b60003361038f818585610a95565b6104a96020840184611459565b6001600160a01b0316336001600160a01b03161461050e5760405162461bcd60e51b815260206004820152601760248201527f4f6e6c792070726f64756365722063616e20636c61696d00000000000000000060448201526064015b60405180910390fd5b826060013542111561055a5760405162461bcd60e51b815260206004820152601560248201527410d95c9d1a599a58d85d1a5bdb88195e1c1a5c9959605a1b6044820152606401610505565b600061057361056e368690038601866115f2565b610b89565b60008181526007602052604090205490915060ff16156105d55760405162461bcd60e51b815260206004820152601a60248201527f43657274696669636174696f6e20616c726561647920757365640000000000006044820152606401610505565b60006106178285858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610c3292505050565b905061062960a0860160808701611459565b6001600160a01b0316816001600160a01b0316146106895760405162461bcd60e51b815260206004820152601760248201527f42616420636572746966696572207369676e61747572650000000000000000006044820152606401610505565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166391d148547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e6e9c8d86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073a9190611679565b6040516001600160e01b031960e084901b16815260048101919091526001600160a01b0384166024820152604401602060405180830381865afa158015610785573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a99190611692565b6107ed5760405162461bcd60e51b815260206004820152601560248201527429b4b3b732b9103737ba1031b4ba3c9030b236b4b760591b6044820152606401610505565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166391d148547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663cb3e1fe76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561087a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089e9190611679565b6108ab6020890189611459565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b03166024820152604401602060405180830381865afa1580156108f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109199190611692565b61095d5760405162461bcd60e51b8152602060048201526015602482015274141c9bd91d58d95c881b9bdd08185c1c1c9bdd9959605a1b6044820152606401610505565b6000828152600760209081526040909120805460ff191660011790556109939061098990870187611459565b8660200135610c5c565b6001600160a01b0381166109aa6020870187611459565b6001600160a01b03167f33308454bc8695e48e56115b2e9d9503733295d820af75aad2beb3c128ca33d5876040013588602001356040516109f5929190918252602082015260400190565b60405180910390a35050505050565b610a118383836001610c92565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015610a8f5781811015610a8057604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610505565b610a8f84848484036000610c92565b50505050565b6001600160a01b038316610abf57604051634b637e8f60e11b815260006004820152602401610505565b6001600160a01b038216610ae95760405163ec442f0560e01b815260006004820152602401610505565b610a11838383610d67565b6001600160a01b038216610b1e57604051634b637e8f60e11b815260006004820152602401610505565b61043582600083610d67565b6060610b577f00000000000000000000000000000000000000000000000000000000000000006005610e91565b905090565b6060610b577f00000000000000000000000000000000000000000000000000000000000000006006610e91565b6000807f0b8b7b064fb1e7b53c85e767bf347efcbffda49b91480ce275012ad13c06493083600001518460200151856040015186606001518760800151604051602001610c0a969594939291909586526001600160a01b0394851660208701526040860193909352606085019190915260808401521660a082015260c00190565b604051602081830303815290604052805190602001209050610c2b81610f3c565b9392505050565b600080600080610c428686610f69565b925092509250610c528282610fb6565b5090949350505050565b6001600160a01b038216610c865760405163ec442f0560e01b815260006004820152602401610505565b61043560008383610d67565b6001600160a01b038416610cbc5760405163e602df0560e01b815260006004820152602401610505565b6001600160a01b038316610ce657604051634a1406b160e11b815260006004820152602401610505565b6001600160a01b0380851660009081526001602090815260408083209387168352929052208290558015610a8f57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610d5991815260200190565b60405180910390a350505050565b6001600160a01b038316610d92578060026000828254610d8791906116b4565b90915550610e049050565b6001600160a01b03831660009081526020819052604090205481811015610de55760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610505565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610e2057600280548290039055610e3f565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e8491815260200190565b60405180910390a3505050565b606060ff8314610eab57610ea48361106f565b9050610395565b818054610eb790611582565b80601f0160208091040260200160405190810160405280929190818152602001828054610ee390611582565b8015610f305780601f10610f0557610100808354040283529160200191610f30565b820191906000526020600020905b815481529060010190602001808311610f1357829003601f168201915b50505050509050610395565b6000610395610f496110ae565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060008351604103610fa35760208401516040850151606086015160001a610f95888285856111d9565b955095509550505050610faf565b50508151600091506002905b9250925092565b6000826003811115610fca57610fca6116d5565b03610fd3575050565b6001826003811115610fe757610fe76116d5565b036110055760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115611019576110196116d5565b0361103a5760405163fce698f760e01b815260048101829052602401610505565b600382600381111561104e5761104e6116d5565b03610435576040516335e2f38360e21b815260048101829052602401610505565b6060600061107c836112a8565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561110757507f000000000000000000000000000000000000000000000000000000000000000046145b1561113157507f000000000000000000000000000000000000000000000000000000000000000090565b610b57604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611214575060009150600390508261129e565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611268573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166112945750600092506001915082905061129e565b9250600091508190505b9450945094915050565b600060ff8216601f81111561039557604051632cd44ac360e21b815260040160405180910390fd5b6000815180845260005b818110156112f6576020818501810151868301820152016112da565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610c2b60208301846112d0565b80356001600160a01b038116811461134057600080fd5b919050565b6000806040838503121561135857600080fd5b61136183611329565b946020939093013593505050565b60008060006060848603121561138457600080fd5b61138d84611329565b925061139b60208501611329565b9150604084013590509250925092565b6000602082840312156113bd57600080fd5b5035919050565b60008083601f8401126113d657600080fd5b50813567ffffffffffffffff8111156113ee57600080fd5b60208301915083602082850101111561140657600080fd5b9250929050565b60008060006040848603121561142257600080fd5b83359250602084013567ffffffffffffffff81111561144057600080fd5b61144c868287016113c4565b9497909650939450505050565b60006020828403121561146b57600080fd5b610c2b82611329565b60ff60f81b881681526000602060e0602084015261149560e084018a6112d0565b83810360408501526114a7818a6112d0565b606085018990526001600160a01b038816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b818110156114fb578351835292840192918401916001016114df565b50909c9b505050505050505050505050565b600080600083850360c081121561152357600080fd5b60a081121561153157600080fd5b5083925060a084013567ffffffffffffffff81111561144057600080fd5b6000806040838503121561156257600080fd5b61156b83611329565b915061157960208401611329565b90509250929050565b600181811c9082168061159657607f821691505b6020821081036115b657634e487b7160e01b600052602260045260246000fd5b50919050565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b600060a0828403121561160457600080fd5b60405160a0810181811067ffffffffffffffff8211171561163557634e487b7160e01b600052604160045260246000fd5b60405261164183611329565b815260208301356020820152604083013560408201526060830135606082015261166d60808401611329565b60808201529392505050565b60006020828403121561168b57600080fd5b5051919050565b6000602082840312156116a457600080fd5b81518015158114610c2b57600080fd5b8082018082111561039557634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfea26469706673582212204171570cdd61931a092ec635a4f83866df9455eddca36acff9791c84c44c5f6864736f6c63430008180033";

type HydroCredTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HydroCredTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HydroCredToken__factory extends ContractFactory {
  constructor(...args: HydroCredTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _roleManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_roleManager, overrides || {});
  }
  override deploy(
    _roleManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_roleManager, overrides || {}) as Promise<
      HydroCredToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): HydroCredToken__factory {
    return super.connect(runner) as HydroCredToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HydroCredTokenInterface {
    return new Interface(_abi) as HydroCredTokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): HydroCredToken {
    return new Contract(address, _abi, runner) as unknown as HydroCredToken;
  }
}
